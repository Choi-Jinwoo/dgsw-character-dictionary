{"version":3,"sources":["components/common/Title/Title.tsx","components/ClubTag/ClubTag.tsx","styles/colors.ts","assets/basic.png","components/PersonCard/PersonCard.tsx","components/PersonList/PersonList.tsx","components/InfoBox/InfoBox.tsx","components/SearchBar/SearchBar.tsx","containers/PeopleContainer.tsx","pages/MainPage.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Title","className","ClubTag","club","colors","gray_e","purple_3","isEmpty","url","trim","length","composeIconStyle","cursor","PersonCard","person","clubElements","handleOpenURL","profile_image","name","blog","github","sns","website","intro","generation","src","Basic","alt","size","title","color","onClick","style","PersonList","personCardElements","InfoBox","React","useState","modalIsOpen","setIsOpen","isOpen","onRequestClose","overlay","backgroundColor","content","top","left","right","bottom","marginRight","transform","border","borderRadius","padding","fontSize","marginBottom","href","SearchBar","searchWord","setSearchWord","type","placeholder","value","onChange","e","target","PeopleContainer","people","setPeople","handleFetchPeople","useCallback","info","window","open","filter","includes","map","clubs","useEffect","MainPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a0c0e77.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Title.scss';\n\nconst Title = () => {\n  return (\n    <div className='Title'>\n      <div className='Title-Content'>\n        <h2>Daesogoin</h2>\n        <div>\n          <p>dgsw character dictionary</p>\n          <p>대구소프트웨어고등학교 졸,재학생의 인물 정보를 기록합니다</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Title;\n","import React from 'react';\n\nimport './ClubTag.scss'\n\ntype PropType = {\n  club: string;\n}\n\nconst ClubTag = ({ club }: PropType) => {\n  return (\n    <span className='ClubTag'>{club}</span>\n  )\n}\n\nexport default ClubTag;","const colors = {\n  gray_e: '#e0e0e0',\n  purple_3: '#3e2b70',\n}\n\nexport default colors;","export default __webpack_public_path__ + \"static/media/basic.ceea5a5c.png\";","import React from 'react';\nimport colors from 'styles/colors';\nimport { SiGithub, SiBloglovin } from 'react-icons/si';\nimport { ImEarth } from 'react-icons/im';\nimport { IoShareSocialSharp } from 'react-icons/io5';\nimport { IPerson } from 'types/person';\n\nimport Basic from 'assets/basic.png'\n\nimport './PersonCard.scss';\n\ntype PropType = {\n  person: IPerson;\n  clubElements: JSX.Element[];\n  handleOpenURL: (url: string | null) => void;\n}\n\nconst isEmpty = (url: string | null): boolean => {\n  if (url === null || url.trim().length <= 0) {\n    return true;\n  }\n\n  return false;\n}\n\nconst composeIconStyle = (url: string | null) => {\n  if (!isEmpty(url)) {\n    return {\n      cursor: 'pointer',\n    }\n  }\n}\n\nconst PersonCard = ({ person, clubElements, handleOpenURL }: PropType) => {\n  const { profile_image, name, blog, github, sns, website, intro, generation } = person;\n\n  return (\n    <div className='PersonCard' >\n      <div className='PersonCard-ProfileWrapper'>\n        <div className='PersonCard-ProfileWrapper-Profile'>\n          <img className='PersonCard-ProfileWrapper-Profile-Image'\n            src={profile_image !== null && profile_image.trim().length > 0 ? profile_image : Basic} alt=\"\" />\n          <span className='PersonCard-ProfileWrapper-Profile-Name'>{name}</span>\n        </div>\n\n        <span className='PersonCard-ProfileWrapper-Generation'>{generation}기</span>\n      </div>\n\n      <div className='PersonCard-Detail'>\n        <div className='PersonCard-Detail-Club'>\n          {clubElements}\n        </div>\n\n        <div className='PersonCard-Detail-URL'>\n          <SiGithub size='20px'\n            title='Github'\n            color={isEmpty(github) ? colors.gray_e : colors.purple_3}\n            onClick={() => handleOpenURL(github)}\n            style={composeIconStyle(github)} />\n          <ImEarth size='20px'\n            title='개인 웹사이트'\n            color={isEmpty(website) ? colors.gray_e : colors.purple_3}\n            onClick={() => handleOpenURL(website)}\n            style={composeIconStyle(website)} />\n          <SiBloglovin size='20px'\n            title='개인 블로그'\n            color={isEmpty(blog) ? colors.gray_e : colors.purple_3}\n            onClick={() => handleOpenURL(blog)}\n            style={composeIconStyle(blog)} />\n          <IoShareSocialSharp size='20px'\n            title='개인 SNS'\n            color={isEmpty(sns) ? colors.gray_e : colors.purple_3}\n            onClick={() => handleOpenURL(sns)}\n            style={composeIconStyle(sns)} />\n        </div>\n      </div>\n\n      <div className='PersonCard-Intro'>\n        {intro}\n      </div>\n    </div>\n  )\n}\n\nexport default PersonCard;","import React from 'react';\n\nimport './PersonList.scss';\n\ntype PropType = {\n  personCardElements: JSX.Element[];\n}\n\nconst PersonList = ({\n  personCardElements,\n}: PropType) => {\n  return (\n    <div className='PersonList'>\n      {personCardElements}\n    </div>\n  )\n}\n\nexport default PersonList;","import React from 'react';\n\nimport { AiFillInfoCircle } from 'react-icons/ai';\nimport Modal from 'react-modal';\nimport colors from 'styles/colors';\n\nimport './InfoBox.scss';\n\nconst InfoBox = () => {\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  }\n\n  const closeModal = () => {\n    setIsOpen(false);\n  }\n\n  const customStyles: ReactModal.Styles = {\n    overlay: {\n      backgroundColor: 'rgba(0,0,0,0.4)'\n    },\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      border: 'none',\n      borderRadius: '3px',\n      padding: '60px 80px'\n    },\n  }\n\n  return (\n    <div className='InfoBox'>\n      <AiFillInfoCircle className='AiFillInfoCircle' color='#4286f4' size='22px' onClick={openModal} />\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n      >\n        <h2 style={{\n          fontSize: '16px',\n          marginBottom: '30px',\n          color: colors.purple_3,\n        }}\n        >안내사항</h2>\n\n        <ol style={{\n          fontSize: '14px',\n          color: '#808080',\n        }}>\n          <li style={{\n            padding: '10px',\n          }}>대구소프트웨어고등학교 재학생 혹은 졸업생 대상입니다</li>\n          <li style={{\n            padding: '10px',\n          }}>사용자 정보 추가, 수정 및 삭제는 <a href=\"http://facebook.com/ChoiJinwoo03/\">제작자</a>로 요청해주세요</li>\n          <li style={{\n            padding: '10px',\n          }}>자세한 등록 사항은 <a href=\"https://github.com/Choi-Jinwoo/dgsw-character-dictionary/blob/master/README.md\">이곳</a>을 참고해주세요</li>\n        </ol>\n      </Modal>\n    </div>\n  )\n}\n\nexport default InfoBox;\n","import InfoBox from 'components/InfoBox/InfoBox';\nimport React, { Dispatch, SetStateAction } from 'react';\nimport { FcSearch } from 'react-icons/fc';\n\nimport './SearchBar.scss';\n\ntype PropType = {\n  searchWord: string;\n  setSearchWord: Dispatch<SetStateAction<string>>,\n}\n\nconst SearchBar = ({\n  searchWord,\n  setSearchWord,\n}: PropType) => {\n  return (\n    <div className='SearchBar'>\n      <div className='SearchInput'>\n        <FcSearch size='20px' />\n        <input type=\"text\"\n          placeholder='이름, 동아리를 검색하세요'\n          value={searchWord}\n          onChange={(e) => setSearchWord(e.target.value)} />\n      </div>\n      <InfoBox />\n    </div>\n  )\n}\n\nexport default SearchBar;","import ClubTag from 'components/ClubTag/ClubTag';\nimport PersonCard from 'components/PersonCard/PersonCard';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { IPerson } from 'types/person';\nimport info from 'data/info.json';\nimport PersonList from 'components/PersonList/PersonList';\nimport SearchBar from 'components/SearchBar/SearchBar';\n\nconst PeopleContainer = () => {\n  const [people, setPeople] = useState<IPerson[]>([]);\n  const [searchWord, setSearchWord] = useState<string>('');\n\n  const handleFetchPeople = useCallback(() => {\n    setPeople(info);\n  }, []);\n\n  const handleOpenURL = useCallback((url: string | null) => {\n    if (url === null || url.trim().length <= 0) {\n      return;\n    }\n\n    window.open(url, '_blank');\n  }, []);\n\n  const filteredPeople = (() => {\n    return people.filter((person) => {\n      if (person.name.includes(searchWord)) {\n        return true;\n      }\n\n      for (const clubItem of person.club) {\n        if (clubItem.includes(searchWord)) {\n          return true;\n        }\n      }\n\n      return false;\n    })\n  })();\n\n\n  const personCardElements = filteredPeople.map((person) => {\n    const clubs = person.club.map((club) => {\n      return <ClubTag club={club} />\n    });\n\n    return <PersonCard person={person} clubElements={clubs} handleOpenURL={handleOpenURL} />\n  })\n\n  useEffect(() => {\n    handleFetchPeople();\n  }, [handleFetchPeople])\n\n  return (\n    <div className='PeopleContainer'>\n      <SearchBar searchWord={searchWord} setSearchWord={setSearchWord} />\n      <PersonList personCardElements={personCardElements} />\n    </div>\n  )\n}\n\nexport default PeopleContainer;","import React from 'react';\nimport Title from 'components/common/Title/Title';\nimport PeopleContainer from 'containers/PeopleContainer';\n\nconst MainPage = () => {\n  return (\n    <div className='MainPage'>\n      <Title />\n      <PeopleContainer />\n    </div>\n  )\n}\n\nexport default MainPage;\n","import MainPage from 'pages/MainPage';\nimport React from 'react';\n\nimport 'styles/common.scss';\n\nconst App = () => {\n  return (\n    <div className='App'>\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}